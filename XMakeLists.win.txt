# To use this template, 
cmake_minimum_required(VERSION 3.11)
project(litebrowser VERSION "0.1.0" LANGUAGES CXX)
include(FetchContent)

# Grab and build StereoKit from the GitHub repository. Here we're setting SK up as a statically linked library.
set(SK_BUILD_TESTS       OFF CACHE INTERNAL "")
set(SK_BUILD_SHARED_LIBS OFF CACHE INTERNAL "")
FetchContent_Declare(StereoKitC GIT_REPOSITORY https://github.com/StereoKit/StereoKit.git GIT_TAG v0.3.6)
FetchContent_MakeAvailable(StereoKitC)

# Grab and build libs
FetchContent_Declare(cairo GIT_REPOSITORY https://github.com/tordex/cairo)
FetchContent_GetProperties(cairo)
if(NOT cairo_POPULATED)
	FetchContent_Populate(cairo)
	add_library(cairo SHARED IMPORTED)
	set_target_properties(cairo PROPERTIES IMPORTED_LOCATION ${cairo_SOURCE_DIR}/64/cairo.lib)
	set_target_properties(cairo PROPERTIES IMPORTED_IMPLIB   ${cairo_SOURCE_DIR}/64/cairo.lib)
	target_include_directories(cairo INTERFACE ${cairo_SOURCE_DIR}/src)
endif()

# Grab and build libs
FetchContent_Declare(txdib GIT_REPOSITORY https://github.com/h3ml/txdib)
FetchContent_Declare(simpledib GIT_REPOSITORY https://github.com/h3ml/simpledib)
FetchContent_MakeAvailable(txdib simpledib)

# add litehtml
set(BUILD_TESTING 0)
add_subdirectory(litehtml)

set(SOURCE_LITEBROWSER
    #src/BrowserWnd.cpp
    #src/el_omnibox.cpp
    #src/HtmlViewWnd.cpp
    #src/litebrowser.cpp
    src/main.cpp
    #src/sl_edit.cpp
    #src/ToolbarWnd.cpp
    src/tordexhttp.cpp
    src/TxThread.cpp
    src/web_history.cpp
    src/web_page.cpp
)

# Add source files to our target executable
add_executable(litebrowser ${SOURCE_LITEBROWSER})
target_include_directories(litebrowser
    SYSTEM
	PRIVATE ${litehtml_SOURCE_DIR}/include
	PRIVATE ${cairo_SOURCE_DIR}/src
	PRIVATE ${txdib_SOURCE_DIR}
    PRIVATE ${simpledib_SOURCE_DIR})

# Link to dependencies
target_link_libraries(litebrowser
	PRIVATE StereoKitC
    PRIVATE litehtml
	PRIVATE cairo
	PRIVATE txdib
	PRIVATE simpledib
)